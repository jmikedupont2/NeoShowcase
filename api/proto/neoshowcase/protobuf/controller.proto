syntax = "proto3";
package neoshowcase.protobuf;
option go_package = "github.com/traPtitech/neoshowcase/pkg/infrastructure/grpc/pb";

import "google/protobuf/empty.proto";
import "neoshowcase/protobuf/gateway.proto";

message StartBuildRequest {
  string build_id = 1;
}

message BuilderRequest {
  enum Type {
    START_BUILD = 0;
    CANCEL_BUILD = 1;
  }
  Type type = 1;
  oneof body {
    StartBuildRequest start_build = 2;
    BuildIdRequest cancel_build = 3;
  }
}

message BuildStarted {
  string build_id = 1;
}

message BuildSettled {
  enum Reason {
    SUCCESS = 0;
    FAILED = 1;
    CANCELLED = 2;
  }
  string build_id = 1;
  Reason reason = 2;
}

message BuildLogPortion {
  string build_id = 1;
  bytes log = 2;
}

message BuilderResponse {
  enum Type {
    CONNECTED = 0;
    BUILD_STARTED = 1;
    BUILD_SETTLED = 2;
    BUILD_LOG = 3;
  }
  Type type = 1;
  oneof body {
    BuildStarted started = 2;
    BuildSettled settled = 3;
    BuildLogPortion log = 4;
  }
}

message SSGenRequest {
  enum Type {
    RELOAD = 0;
  }
  Type type = 1;
}

service ControllerService {
  rpc GetSystemInfo(google.protobuf.Empty) returns (SystemInfo);

  rpc FetchRepository(RepositoryIdRequest) returns (google.protobuf.Empty);
  rpc RegisterBuild(ApplicationIdRequest) returns (google.protobuf.Empty);
  rpc SyncDeployments(google.protobuf.Empty) returns (google.protobuf.Empty);
  rpc StreamBuildLog(BuildIdRequest) returns (stream BuildLog);
  rpc CancelBuild(BuildIdRequest) returns (google.protobuf.Empty);
}

service ControllerBuilderService {
  rpc ConnectBuilder(stream BuilderResponse) returns (stream BuilderRequest);
}

service ControllerSSGenService {
  rpc ConnectSSGen(google.protobuf.Empty) returns (stream SSGenRequest);
}
