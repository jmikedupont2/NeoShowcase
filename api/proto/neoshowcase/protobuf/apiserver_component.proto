syntax = "proto3";
package neoshowcase.protobuf;
option go_package = "github.com/traPtitech/neoshowcase/pkg/interface/grpc/pb";

import "google/protobuf/empty.proto";
import "neoshowcase/protobuf/apiserver.proto";

message BuildSource {
  string repository_id = 1;
  string commit = 2;
}

message BuildOptions {
  string base_image_name = 1;
  string dockerfile_name = 2;
  string artifact_path = 3;
  string build_cmd = 4;
  string entrypoint_cmd = 5;
}

message StartBuildImageRequest {
  string image_name = 1;
  string image_tag = 2;
  BuildSource source = 3;
  BuildOptions options = 4;
  string build_id = 5;
  string application_id = 6;
}

message StartBuildStaticRequest {
  BuildSource source = 1;
  BuildOptions options = 2;
  string build_id = 3;
  string application_id = 4;
}

message BuilderRequest {
  enum Type {
    START_BUILD_IMAGE = 0;
    START_BUILD_STATIC = 1;
    CANCEL_BUILD = 2;
  }
  Type type = 1;
  oneof body {
    StartBuildImageRequest build_image = 2;
    StartBuildStaticRequest build_static = 3;
    CancelBuildRequest cancel_build = 4;
  }
}

message BuildStarted {
  string application_id = 1;
  string build_id = 2;
}

message BuildSettled {
  enum Reason {
    SUCCESS = 0;
    FAILED = 1;
    CANCELLED = 2;
  }
  string application_id = 1;
  string build_id = 2;
  Reason reason = 3;
}

message BuildLogPortion {
  string build_id = 1;
  string log = 2;
}

message BuilderResponse {
  enum Type {
    CONNECTED = 0;
    BUILD_STARTED = 1;
    BUILD_SETTLED = 2;
    BUILD_LOG = 3;
  }
  Type type = 1;
  oneof body {
    BuildStarted started = 2;
    BuildSettled settled = 3;
    BuildLogPortion log = 4;
  }
}

message SSGenRequest {
  enum Type {
    RELOAD = 0;
  }
  Type type = 1;
}

service ComponentService {
  rpc ConnectBuilder(stream BuilderResponse) returns (stream BuilderRequest);
  rpc ConnectSSGen(google.protobuf.Empty) returns (stream SSGenRequest);
}
