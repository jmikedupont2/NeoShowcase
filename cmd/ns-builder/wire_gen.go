// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/leandro-lugaresi/hub"
	"github.com/traPtitech/neoshowcase/pkg/infrastructure/admindb"
	"github.com/traPtitech/neoshowcase/pkg/infrastructure/eventbus"
	"github.com/traPtitech/neoshowcase/pkg/interface/grpc"
	"github.com/traPtitech/neoshowcase/pkg/usecase"
)

// Injectors from wire.go:

func New(c2 Config) (*Server, error) {
	config := provideAdminDBConfig(c2)
	db, err := admindb.New(config)
	if err != nil {
		return nil, err
	}
	hubHub := hub.New()
	bus := eventbus.NewLocal(hubHub)
	server := grpc.NewServer()
	client, err := initBuildkitClient(c2)
	if err != nil {
		return nil, err
	}
	tcpListenPort := provideGRPCPort(c2)
	storageConfig := provideStorageConfig(c2)
	storage, err := initStorage(storageConfig)
	if err != nil {
		return nil, err
	}
	dockerImageRegistryString := provideDockerImageRegistry(c2)
	builderService := usecase.NewBuilderService(client, storage, bus, db, dockerImageRegistryString)
	grpcBuilderService := grpc.NewBuilderServiceServer(builderService)
	mainServer := &Server{
		db:         db,
		eventbus:   bus,
		grpcServer: server,
		buildkit:   client,
		port:       tcpListenPort,
		builder:    grpcBuilderService,
	}
	return mainServer, nil
}
