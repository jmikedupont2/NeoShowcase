// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/traPtitech/neoshowcase/pkg/infrastructure/admindb"
	"github.com/traPtitech/neoshowcase/pkg/infrastructure/staticserver"
	"github.com/traPtitech/neoshowcase/pkg/interface/grpc"
	"github.com/traPtitech/neoshowcase/pkg/interface/repository"
	"github.com/traPtitech/neoshowcase/pkg/usecase"
)

// Injectors from wire.go:

func New(c2 Config) (*Server, error) {
	config := c2.DB
	db, err := admindb.New(config)
	if err != nil {
		return nil, err
	}
	controllerServiceClientConfig := c2.Controller
	controllerSSGenServiceClient := grpc.NewControllerSSGenServiceClient(controllerServiceClientConfig)
	applicationRepository := repository.NewApplicationRepository(db)
	buildRepository := repository.NewBuildRepository(db)
	storageConfig := c2.Storage
	storage, err := provideStorage(storageConfig)
	if err != nil {
		return nil, err
	}
	staticServerDocumentRootPath := provideWebServerDocumentRootPath(c2)
	staticServerPort := provideWebServerPort(c2)
	ssEngine := staticserver.NewBuiltIn(storage, staticServerDocumentRootPath, staticServerPort)
	staticSiteServerService := usecase.NewStaticSiteServerService(controllerSSGenServiceClient, applicationRepository, buildRepository, ssEngine)
	server := &Server{
		db:     db,
		svc:    staticSiteServerService,
		engine: ssEngine,
	}
	return server, nil
}
