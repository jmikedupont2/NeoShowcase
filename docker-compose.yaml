services:
  ns:
    build:
      context: .
      target: ns
    image: ghcr.io/traptitech/ns:main
    command: run --debug --loglevel=trace
    restart: always
    environment:
      NS_APISERVER_DEBUG: "true"
      NS_APISERVER_DB_HOST: "mysql"
      NS_APISERVER_MARIADB_HOST: "mysql"
      NS_APISERVER_MONGODB_HOST: "mongo"
      NS_APISERVER_STORAGE_TYPE: "local"
      NS_APISERVER_STORAGE_LOCAL_DIR: "/data"
      NS_APISERVER_SS_URL: "http://ns-ssgen:80/"
      NS_APISERVER_DOCKER_CONFDIR: "/opt/traefik/conf"
      NS_APISERVER_WEB_APP_PORT: "5000"
      NS_APISERVER_WEB_COMPONENT_PORT: "10000"
      NS_APISERVER_REPOSITORY_CACHEDIR: "/repositories"
      NS_APISERVER_REPOSITORY_PRIVATEKEYFILE: "/keys/id_ed25519"
      NS_APISERVER_IMAGE_REGISTRY_SCHEME: "http"
      NS_APISERVER_IMAGE_REGISTRY_ADDR: "registry.local.trapti.tech"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./local-dev/data:/data
      - ./local-dev/keys:/keys
      - ./local-dev/repositories:/repositories
      - ./local-dev/traefik:/opt/traefik/conf
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ns.rule=Host(`ns.local.trapti.tech`) && PathPrefix(`/neoshowcase.protobuf.ApplicationService`)"
      - "traefik.http.routers.ns.service=ns"
      - "traefik.http.services.ns.loadbalancer.server.port=5000"
    depends_on:
      mysql:
        condition: service_healthy
      ns-migrate:
        condition: service_completed_successfully
    networks:
      - default

  dashboard:
    build:
      context: ./dashboard
      target: dev
    image: ghcr.io/traptitech/ns-dashboard:main
    restart: always
    volumes:
      - ./dashboard:/work
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ns_dashboard.rule=Host(`ns.local.trapti.tech`)"
      - "traefik.http.routers.ns_dashboard.service=ns_dashboard"
      - "traefik.http.services.ns_dashboard.loadbalancer.server.port=80"
    networks:
      - default

  ns-mc:
    build:
      context: .
      target: ns-mc
    image: ghcr.io/traptitech/ns-mc:main
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ns_mc.rule=Host(`mc.local.trapti.tech`)"
      - "traefik.http.services.ns_mc.loadbalancer.server.port=8080"
    networks:
      - default

  ns-builder:
    build:
      context: .
      target: ns-builder
    image: ghcr.io/traptitech/ns-builder:main
    command: run --debug --loglevel=trace
    restart: always
    environment:
      NS_BUILDER_BUILDKIT_ADDRESS: "tcp://buildkitd:1234"
      NS_BUILDER_REPOSITORY_PRIVATEKEYFILE: "/keys/id_ed25519"
      NS_BUILDER_NS_URL: "http://ns:10000"
      NS_BUILDER_DB_HOST: "mysql"
      NS_BUILDER_STORAGE_TYPE: "local"
      NS_BUILDER_STORAGE_LOCAL_DIR: "/data"
    volumes:
      - ./local-dev/keys:/keys
      - ./local-dev/local-storage:/data
    depends_on:
      mysql:
        condition: service_healthy
      ns-migrate:
        condition: service_completed_successfully
      buildkitd:
        condition: service_started
    networks:
      - default

  ns-ssgen:
    build:
      context: .
      target: ns-ssgen
    image: ghcr.io/traptitech/ns-ssgen:main
    command: run --debug --loglevel=trace
    restart: always
    environment:
      NS_SSGEN_NS_URL: "http://ns:10000"
      NS_SSGEN_DB_HOST: "mysql"
      NS_SSGEN_ARTIFACTSROOT: "/artifacts"
      NS_SSGEN_STORAGE_TYPE: "local"
      NS_SSGEN_STORAGE_LOCAL_DIR: "/data"
    volumes:
      - ./local-dev/staticsite/artifacts:/artifacts
      - ./local-dev/local-storage:/data
    ports:
      - "5008:80"
    depends_on:
      mysql:
        condition: service_healthy
      ns-migrate:
        condition: service_completed_successfully
    networks:
      - default

  ns-migrate:
    build:
      context: .
      target: ns-migrate
    image: ghcr.io/traptitech/ns-migrate:main
    command: up
    restart: "no"
    environment:
      DB_HOST: "mysql"
      DB_PORT: "3306"
      DB_USER: "root"
      DB_PASS: "password"
      DB_NAME: "neoshowcase"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - default

  registry:
    image: registry:2
    restart: always
    environment:
      REGISTRY_STORAGE_DELETE_ENABLED: "true"
      REGISTRY_HTTP_ADDR: :80
      GC_SCRIPT: /gc.sh
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.registry.rule=Host(`registry.local.trapti.tech`)"
      - "traefik.http.services.registry.loadbalancer.server.port=80"
    volumes:
      - ./local-dev/registry/entrypoint.sh:/entrypoint.sh
      - ./local-dev/registry/gc.sh:/gc.sh
    networks:
      default:
        aliases:
          - "registry.local.trapti.tech"

  registry-frontend:
    image: konradkleine/docker-registry-frontend:v2
    restart: always
    environment:
      ENV_DOCKER_REGISTRY_HOST: registry.local.trapti.tech
      ENV_DOCKER_REGISTRY_PORT: 80
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.registry_frontend.rule=Host(`registry-frontend.local.trapti.tech`)"
      - "traefik.http.services.registry_frontend.loadbalancer.server.port=80"
    networks:
      - default

  buildkitd:
    image: moby/buildkit:latest
    restart: always
    privileged: true
    command: --addr tcp://0.0.0.0:1234
    volumes:
      - ./local-dev/buildkitd/buildkitd.toml:/etc/buildkit/buildkitd.toml
    networks:
      - default

  mysql:
    image: mariadb:10
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: neoshowcase
    command: mysqld --character-set-server=utf8 --collation-server=utf8_general_ci
    healthcheck:
      test: mysql --user=root --password=password --execute "SHOW DATABASES;"
      interval: 1s
      timeout: 10s
      retries: 60
    volumes:
      - ./local-dev/mysql:/var/lib/mysql
    ports:
      - "5004:3306"
    networks:
      - default
      - apps

  mongo:
    image: mongo:6
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ./local-dev/mongo:/data/db
    ports:
      - "5010:27017"
    networks:
      - default
      - apps

  adminer:
    image: adminer:4.7.5
    restart: always
    environment:
      ADMINER_DEFAULT_SERVER: mysql
      ADMINER_DESIGN: nette
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.adminer.rule=Host(`adminer.local.trapti.tech`)"
      - "traefik.http.services.adminer.loadbalancer.server.port=8080"
    networks:
      - default

  traefik:
    image: traefik:2.10.0-rc1
    restart: always
    command:
      - --api.insecure=true
      - --providers.docker
      - --providers.docker.exposedByDefault=false
      - --providers.file
      - --providers.file.directory=/opt/neoshowcase/conf
      - --providers.file.watch=true
      - --entrypoints.web.address=:80/tcp
      - --entrypoints.websecure.address=:443/tcp
      - --entrypoints.websecure.http.tls=true
      - --entrypoints.traefik.address=:8080/tcp
      - --entrypoints.metrics.address=:9100/tcp
      - --api.dashboard=true
      - --ping=true
      - --metrics.prometheus=true
      - --metrics.prometheus.entrypoint=metrics
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
      - "9100:9100"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./local-dev/traefik:/opt/neoshowcase/conf
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik_dashboard.rule=Host(`traefik.local.trapti.tech`)"
      - "traefik.http.routers.traefik_dashboard.service=traefik_dashboard"
      - "traefik.http.services.traefik_dashboard.loadbalancer.server.port=8080"
      - "traefik.http.routers.traefik_metrics.rule=Host(`traefik.local.trapti.tech`) && PathPrefix(`/metrics`)"
      - "traefik.http.routers.traefik_metrics.service=traefik_metrics"
      - "traefik.http.services.traefik_metrics.loadbalancer.server.port=9100"
    networks:
      - default
      - apps

networks:
  default: { }
  apps:
    name: neoshowcase_apps
    external: true
