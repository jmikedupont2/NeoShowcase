services:
  ns:
    build:
      context: .
      target: ns
    command: run --debug --loglevel=trace
    restart: always
    environment:
      NS_APISERVER_DB_HOST: "mysql"
      NS_APISERVER_BUILDER_ADDR: "ns-builder:10000"
      NS_APISERVER_BUILDER_INSECURE: "true"
      NS_APISERVER_SSGEN_ADDR: "ns-ssgen:10000"
      NS_APISERVER_SSGEN_INSECURE: "true"
      NS_APISERVER_HTTP_PORT: "8080"
      NS_APISERVER_HTTP_DEBUG: "true"
      NS_APISERVER_IMAGE_REGISTRY: "localhost:5000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./local-dev/neoshowcase:/data
      - ./local-dev/traefik:/opt/traefik/conf
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ns_admin.rule=Host(`local.tokyotech.org`)"
      - "traefik.http.services.ns_admin.loadbalancer.server.port=8080"
    depends_on:
      - mysql
    networks:
      - default

  ns-mc:
    build:
      context: .
      target: ns-mc
    restart: always
    ports:
      - "5005:8081"
    networks:
      - default

  ns-builder:
    build:
      context: .
      target: ns-builder
    command: run --debug --loglevel=trace
    restart: always
    environment:
      NS_BUILDER_BUILDKIT_ADDRESS: "tcp://buildkitd:1234"
      NS_BUILDER_BUILDKIT_REGISTRY: "registry:5000"
      NS_BUILDER_DB_HOST: "mysql"
    volumes:
      - ./local-dev/neoshowcase/artifacts:/neoshowcase/artifacts
      - ./local-dev/neoshowcase/buildlogs:/neoshowcase/buildlogs
    ports:
      - "5006:10000"
    depends_on:
      - mysql
      - buildkitd
    networks:
      - default

  ns-ssgen:
    build:
      context: .
      target: ns-ssgen
    command: run --debug --loglevel=trace
    restart: always
    environment:
      NS_SSGEN_DB_HOST: "mysql"
      NS_SSGEN_ARTIFACTSROOT: "/srv/artifacts"
    volumes:
      - ./local-dev/staticsite/artifacts:/srv/artifacts
      - ./local-dev/neoshowcase/artifacts:/neoshowcase/artifacts
    ports:
      - "5007:10000"
      - "5008:80"
    depends_on:
      - mysql
    networks:
      - default

  registry:
    image: registry:2
    restart: always
    ports:
      - "5000:5000"
    volumes:
      - ./local-dev/registry/cert:/certs
    environment:
      REGISTRY_STORAGE_DELETE_ENABLED: "true"
      REGISTRY_HTTP_TLS_CERTIFICATE: /certs/domain.crt
      REGISTRY_HTTP_TLS_KEY: /certs/domain.key
    networks:
      - default

  registry-frontend:
    image: konradkleine/docker-registry-frontend:v2
    restart: always
    ports:
      - "5003:80"
    environment:
      ENV_DOCKER_REGISTRY_HOST: registry
      ENV_DOCKER_REGISTRY_PORT: 5000
      ENV_DOCKER_REGISTRY_USE_SSL: 1
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.registry_frontend.rule=Host(`registry.local.tokyotech.org`)"
      - "traefik.http.services.registry_frontend.loadbalancer.server.port=80"
    networks:
      - default

  buildkitd:
    image: moby/buildkit:latest
    restart: always
    privileged: true
    ports:
      - "5002:1234"
    command: --addr tcp://0.0.0.0:1234
    volumes:
      - ./local-dev/registry/cert/domain.crt:/etc/ssl/certs/registry.crt
    networks:
      - default

  mysql:
    image: mariadb
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: neoshowcase
    command: mysqld --character-set-server=utf8 --collation-server=utf8_general_ci
    ports:
      - "5004:3306"
    networks:
      - default
      - apps

  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    ports:
      - "5010:27017"
    networks:
      - default
      - apps

  adminer:
    image: adminer:4.7.5
    restart: always
    environment:
      ADMINER_DEFAULT_SERVER: mysql
      ADMINER_DESIGN: nette
    ports:
      - "5001:8080"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.adminer.rule=Host(`adminer.local.tokyotech.org`)"
      - "traefik.http.services.adminer.loadbalancer.server.port=8080"
    networks:
      - default

  traefik:
    image: traefik:v2.3
    restart: always
    command:
      - --api.insecure=true
      - --providers.docker
      - --providers.docker.exposedByDefault=false
      - --providers.file
      - --providers.file.directory=/opt/neoshowcase/conf
    ports:
      - "8888:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./local-dev/traefik:/opt/neoshowcase/conf
    networks:
      - default
      - apps

networks:
  default: { }
  apps: { }
