name: CI

on:
  push:
    branches:
      - 'master'
  pull_request:

jobs:
  mod:
    name: Mod
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: 1.15
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-gomod-${{ hashFiles('**/go.sum') }}
      - run: go mod download
  build:
    name: Build Components
    runs-on: ubuntu-latest
    needs: [ mod ]
    strategy:
      matrix:
        component:
          - ns
          - ns-builder
          - ns-mc
          - ns-migrate
          - ns-ssgen
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: 1.15
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-gomod-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-gomod-
      - run: go build ./cmd/${{ matrix.component }}
  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: [ mod ]
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: 1.15
      - name: Install reviewdog
        run: curl -sfL https://raw.githubusercontent.com/reviewdog/reviewdog/master/install.sh | sh -s -- -b $(go env GOPATH)/bin
      - name: Install golangci-lint
        run: curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s --  -b $(go env GOPATH)/bin
      - name: Add PATH
        run: echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-gomod-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-gomod-
      - name: golangci-lint
        run: golangci-lint run --out-format=line-number | reviewdog -f=golangci-lint -name=golangci-lint -reporter=github-check
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  test:
    name: Test
    runs-on: ubuntu-latest
    needs: [ mod ]
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: 1.15
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-gomod-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-gomod-
      - name: Run tests
        run: go test ./... -race -vet=off
  tbls:
    name: TBLS
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mariadb:10.0.19
        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: neoshowcase
        ports:
          - 5004:3306
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: 1.15
      - name: Install sql-migrate
        run: go get -v github.com/rubenv/sql-migrate/...
      - run: sql-migrate up
      - name: Lint
        run: |
          source <(curl -sL https://git.io/use-tbls)
          tbls lint
        env:
          TBLS_DSN: "mysql://root:password@127.0.0.1:5004/neoshowcase"
  spectral:
    name: Spectral
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Spectral checks
        uses: stoplightio/spectral-action@v0.7.0
        with:
          file_glob: api/http/swagger.yaml
          repo_token: ${{ secrets.GITHUB_TOKEN }}
