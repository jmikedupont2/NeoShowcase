// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: neoshowcase/api/sites.proto

package api

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/traPtitech/neoshowcase/pkg/apiserver/grpc/entitypb"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type GetAllStaticSitesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAllStaticSitesRequest) Reset() {
	*x = GetAllStaticSitesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_neoshowcase_api_sites_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllStaticSitesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllStaticSitesRequest) ProtoMessage() {}

func (x *GetAllStaticSitesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_neoshowcase_api_sites_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllStaticSitesRequest.ProtoReflect.Descriptor instead.
func (*GetAllStaticSitesRequest) Descriptor() ([]byte, []int) {
	return file_neoshowcase_api_sites_proto_rawDescGZIP(), []int{0}
}

type StaticSite struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Fqdn          string               `protobuf:"bytes,2,opt,name=fqdn,proto3" json:"fqdn,omitempty"`
	PathPrefix    string               `protobuf:"bytes,3,opt,name=path_prefix,json=pathPrefix,proto3" json:"path_prefix,omitempty"`
	ArtifactId    string               `protobuf:"bytes,4,opt,name=artifact_id,json=artifactId,proto3" json:"artifact_id,omitempty"`
	ApplicationId string               `protobuf:"bytes,5,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"`
	CreatedAt     *timestamp.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamp.Timestamp `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *StaticSite) Reset() {
	*x = StaticSite{}
	if protoimpl.UnsafeEnabled {
		mi := &file_neoshowcase_api_sites_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StaticSite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StaticSite) ProtoMessage() {}

func (x *StaticSite) ProtoReflect() protoreflect.Message {
	mi := &file_neoshowcase_api_sites_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StaticSite.ProtoReflect.Descriptor instead.
func (*StaticSite) Descriptor() ([]byte, []int) {
	return file_neoshowcase_api_sites_proto_rawDescGZIP(), []int{1}
}

func (x *StaticSite) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *StaticSite) GetFqdn() string {
	if x != nil {
		return x.Fqdn
	}
	return ""
}

func (x *StaticSite) GetPathPrefix() string {
	if x != nil {
		return x.PathPrefix
	}
	return ""
}

func (x *StaticSite) GetArtifactId() string {
	if x != nil {
		return x.ArtifactId
	}
	return ""
}

func (x *StaticSite) GetApplicationId() string {
	if x != nil {
		return x.ApplicationId
	}
	return ""
}

func (x *StaticSite) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *StaticSite) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type GetAllStaticSitesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sites []*StaticSite `protobuf:"bytes,1,rep,name=sites,proto3" json:"sites,omitempty"`
}

func (x *GetAllStaticSitesResponse) Reset() {
	*x = GetAllStaticSitesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_neoshowcase_api_sites_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllStaticSitesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllStaticSitesResponse) ProtoMessage() {}

func (x *GetAllStaticSitesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_neoshowcase_api_sites_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllStaticSitesResponse.ProtoReflect.Descriptor instead.
func (*GetAllStaticSitesResponse) Descriptor() ([]byte, []int) {
	return file_neoshowcase_api_sites_proto_rawDescGZIP(), []int{2}
}

func (x *GetAllStaticSitesResponse) GetSites() []*StaticSite {
	if x != nil {
		return x.Sites
	}
	return nil
}

var File_neoshowcase_api_sites_proto protoreflect.FileDescriptor

var file_neoshowcase_api_sites_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x6e, 0x65, 0x6f, 0x73, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x73, 0x69, 0x74, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x6e,
	0x65, 0x6f, 0x73, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x6e, 0x65, 0x6f, 0x73,
	0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x1a, 0x0a,
	0x18, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x53, 0x69, 0x74,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x8f, 0x02, 0x0a, 0x0a, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x63, 0x53, 0x69, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x71, 0x64, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x71, 0x64, 0x6e, 0x12, 0x1f, 0x0a, 0x0b,
	0x70, 0x61, 0x74, 0x68, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x70, 0x61, 0x74, 0x68, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x1f, 0x0a,
	0x0b, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x49, 0x64, 0x12, 0x25,
	0x0a, 0x0e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x59, 0x0a, 0x19, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x53, 0x69, 0x74, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x05, 0x73, 0x69, 0x74, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6e, 0x65, 0x6f, 0x73, 0x68, 0x6f,
	0x77, 0x63, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x53, 0x69, 0x74, 0x65, 0x52,
	0x05, 0x73, 0x69, 0x74, 0x65, 0x73, 0x32, 0x8a, 0x01, 0x0a, 0x05, 0x53, 0x69, 0x74, 0x65, 0x73,
	0x12, 0x80, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x63, 0x53, 0x69, 0x74, 0x65, 0x73, 0x12, 0x34, 0x2e, 0x6e, 0x65, 0x6f, 0x73, 0x68, 0x6f, 0x77,
	0x63, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63,
	0x53, 0x69, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x6e,
	0x65, 0x6f, 0x73, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x53, 0x69, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x3a, 0x5a, 0x38, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x74, 0x72, 0x61, 0x50, 0x74, 0x69, 0x74, 0x65, 0x63, 0x68, 0x2f, 0x6e, 0x65, 0x6f,
	0x73, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x61, 0x70, 0x69, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_neoshowcase_api_sites_proto_rawDescOnce sync.Once
	file_neoshowcase_api_sites_proto_rawDescData = file_neoshowcase_api_sites_proto_rawDesc
)

func file_neoshowcase_api_sites_proto_rawDescGZIP() []byte {
	file_neoshowcase_api_sites_proto_rawDescOnce.Do(func() {
		file_neoshowcase_api_sites_proto_rawDescData = protoimpl.X.CompressGZIP(file_neoshowcase_api_sites_proto_rawDescData)
	})
	return file_neoshowcase_api_sites_proto_rawDescData
}

var file_neoshowcase_api_sites_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_neoshowcase_api_sites_proto_goTypes = []interface{}{
	(*GetAllStaticSitesRequest)(nil),  // 0: neoshowcase.proto.services.GetAllStaticSitesRequest
	(*StaticSite)(nil),                // 1: neoshowcase.proto.services.StaticSite
	(*GetAllStaticSitesResponse)(nil), // 2: neoshowcase.proto.services.GetAllStaticSitesResponse
	(*timestamp.Timestamp)(nil),       // 3: google.protobuf.Timestamp
}
var file_neoshowcase_api_sites_proto_depIdxs = []int32{
	3, // 0: neoshowcase.proto.services.StaticSite.created_at:type_name -> google.protobuf.Timestamp
	3, // 1: neoshowcase.proto.services.StaticSite.updated_at:type_name -> google.protobuf.Timestamp
	1, // 2: neoshowcase.proto.services.GetAllStaticSitesResponse.sites:type_name -> neoshowcase.proto.services.StaticSite
	0, // 3: neoshowcase.proto.services.Sites.GetAllStaticSites:input_type -> neoshowcase.proto.services.GetAllStaticSitesRequest
	2, // 4: neoshowcase.proto.services.Sites.GetAllStaticSites:output_type -> neoshowcase.proto.services.GetAllStaticSitesResponse
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_neoshowcase_api_sites_proto_init() }
func file_neoshowcase_api_sites_proto_init() {
	if File_neoshowcase_api_sites_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_neoshowcase_api_sites_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllStaticSitesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_neoshowcase_api_sites_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StaticSite); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_neoshowcase_api_sites_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllStaticSitesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_neoshowcase_api_sites_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_neoshowcase_api_sites_proto_goTypes,
		DependencyIndexes: file_neoshowcase_api_sites_proto_depIdxs,
		MessageInfos:      file_neoshowcase_api_sites_proto_msgTypes,
	}.Build()
	File_neoshowcase_api_sites_proto = out.File
	file_neoshowcase_api_sites_proto_rawDesc = nil
	file_neoshowcase_api_sites_proto_goTypes = nil
	file_neoshowcase_api_sites_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SitesClient is the client API for Sites service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SitesClient interface {
	GetAllStaticSites(ctx context.Context, in *GetAllStaticSitesRequest, opts ...grpc.CallOption) (*GetAllStaticSitesResponse, error)
}

type sitesClient struct {
	cc grpc.ClientConnInterface
}

func NewSitesClient(cc grpc.ClientConnInterface) SitesClient {
	return &sitesClient{cc}
}

func (c *sitesClient) GetAllStaticSites(ctx context.Context, in *GetAllStaticSitesRequest, opts ...grpc.CallOption) (*GetAllStaticSitesResponse, error) {
	out := new(GetAllStaticSitesResponse)
	err := c.cc.Invoke(ctx, "/neoshowcase.proto.services.Sites/GetAllStaticSites", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SitesServer is the server API for Sites service.
type SitesServer interface {
	GetAllStaticSites(context.Context, *GetAllStaticSitesRequest) (*GetAllStaticSitesResponse, error)
}

// UnimplementedSitesServer can be embedded to have forward compatible implementations.
type UnimplementedSitesServer struct {
}

func (*UnimplementedSitesServer) GetAllStaticSites(context.Context, *GetAllStaticSitesRequest) (*GetAllStaticSitesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllStaticSites not implemented")
}

func RegisterSitesServer(s *grpc.Server, srv SitesServer) {
	s.RegisterService(&_Sites_serviceDesc, srv)
}

func _Sites_GetAllStaticSites_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllStaticSitesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SitesServer).GetAllStaticSites(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/neoshowcase.proto.services.Sites/GetAllStaticSites",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SitesServer).GetAllStaticSites(ctx, req.(*GetAllStaticSitesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Sites_serviceDesc = grpc.ServiceDesc{
	ServiceName: "neoshowcase.proto.services.Sites",
	HandlerType: (*SitesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAllStaticSites",
			Handler:    _Sites_GetAllStaticSites_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "neoshowcase/api/sites.proto",
}
