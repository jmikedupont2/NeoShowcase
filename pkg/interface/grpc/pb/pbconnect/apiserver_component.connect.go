// Code generated by protoc-gen-connect-go. DO NOT EDIT.
//
// Source: neoshowcase/protobuf/apiserver_component.proto

package pbconnect

import (
	context "context"
	errors "errors"
	connect_go "github.com/bufbuild/connect-go"
	pb "github.com/traPtitech/neoshowcase/pkg/interface/grpc/pb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	http "net/http"
	strings "strings"
)

// This is a compile-time assertion to ensure that this generated file and the connect package are
// compatible. If you get a compiler error that this constant is not defined, this code was
// generated with a version of connect newer than the one compiled into your binary. You can fix the
// problem by either regenerating this code with an older version of connect or updating the connect
// version compiled into your binary.
const _ = connect_go.IsAtLeastVersion0_1_0

const (
	// ComponentServiceName is the fully-qualified name of the ComponentService service.
	ComponentServiceName = "neoshowcase.protobuf.ComponentService"
)

// These constants are the fully-qualified names of the RPCs defined in this package. They're
// exposed at runtime as Spec.Procedure and as the final two segments of the HTTP route.
//
// Note that these are different from the fully-qualified method names used by
// google.golang.org/protobuf/reflect/protoreflect. To convert from these constants to
// reflection-formatted method names, remove the leading slash and convert the remaining slash to a
// period.
const (
	// ComponentServiceConnectBuilderProcedure is the fully-qualified name of the ComponentService's
	// ConnectBuilder RPC.
	ComponentServiceConnectBuilderProcedure = "/neoshowcase.protobuf.ComponentService/ConnectBuilder"
	// ComponentServiceConnectSSGenProcedure is the fully-qualified name of the ComponentService's
	// ConnectSSGen RPC.
	ComponentServiceConnectSSGenProcedure = "/neoshowcase.protobuf.ComponentService/ConnectSSGen"
)

// ComponentServiceClient is a client for the neoshowcase.protobuf.ComponentService service.
type ComponentServiceClient interface {
	ConnectBuilder(context.Context) *connect_go.BidiStreamForClient[pb.BuilderResponse, pb.BuilderRequest]
	ConnectSSGen(context.Context, *connect_go.Request[emptypb.Empty]) (*connect_go.ServerStreamForClient[pb.SSGenRequest], error)
}

// NewComponentServiceClient constructs a client for the neoshowcase.protobuf.ComponentService
// service. By default, it uses the Connect protocol with the binary Protobuf Codec, asks for
// gzipped responses, and sends uncompressed requests. To use the gRPC or gRPC-Web protocols, supply
// the connect.WithGRPC() or connect.WithGRPCWeb() options.
//
// The URL supplied here should be the base URL for the Connect or gRPC server (for example,
// http://api.acme.com or https://acme.com/grpc).
func NewComponentServiceClient(httpClient connect_go.HTTPClient, baseURL string, opts ...connect_go.ClientOption) ComponentServiceClient {
	baseURL = strings.TrimRight(baseURL, "/")
	return &componentServiceClient{
		connectBuilder: connect_go.NewClient[pb.BuilderResponse, pb.BuilderRequest](
			httpClient,
			baseURL+ComponentServiceConnectBuilderProcedure,
			opts...,
		),
		connectSSGen: connect_go.NewClient[emptypb.Empty, pb.SSGenRequest](
			httpClient,
			baseURL+ComponentServiceConnectSSGenProcedure,
			opts...,
		),
	}
}

// componentServiceClient implements ComponentServiceClient.
type componentServiceClient struct {
	connectBuilder *connect_go.Client[pb.BuilderResponse, pb.BuilderRequest]
	connectSSGen   *connect_go.Client[emptypb.Empty, pb.SSGenRequest]
}

// ConnectBuilder calls neoshowcase.protobuf.ComponentService.ConnectBuilder.
func (c *componentServiceClient) ConnectBuilder(ctx context.Context) *connect_go.BidiStreamForClient[pb.BuilderResponse, pb.BuilderRequest] {
	return c.connectBuilder.CallBidiStream(ctx)
}

// ConnectSSGen calls neoshowcase.protobuf.ComponentService.ConnectSSGen.
func (c *componentServiceClient) ConnectSSGen(ctx context.Context, req *connect_go.Request[emptypb.Empty]) (*connect_go.ServerStreamForClient[pb.SSGenRequest], error) {
	return c.connectSSGen.CallServerStream(ctx, req)
}

// ComponentServiceHandler is an implementation of the neoshowcase.protobuf.ComponentService
// service.
type ComponentServiceHandler interface {
	ConnectBuilder(context.Context, *connect_go.BidiStream[pb.BuilderResponse, pb.BuilderRequest]) error
	ConnectSSGen(context.Context, *connect_go.Request[emptypb.Empty], *connect_go.ServerStream[pb.SSGenRequest]) error
}

// NewComponentServiceHandler builds an HTTP handler from the service implementation. It returns the
// path on which to mount the handler and the handler itself.
//
// By default, handlers support the Connect, gRPC, and gRPC-Web protocols with the binary Protobuf
// and JSON codecs. They also support gzip compression.
func NewComponentServiceHandler(svc ComponentServiceHandler, opts ...connect_go.HandlerOption) (string, http.Handler) {
	mux := http.NewServeMux()
	mux.Handle(ComponentServiceConnectBuilderProcedure, connect_go.NewBidiStreamHandler(
		ComponentServiceConnectBuilderProcedure,
		svc.ConnectBuilder,
		opts...,
	))
	mux.Handle(ComponentServiceConnectSSGenProcedure, connect_go.NewServerStreamHandler(
		ComponentServiceConnectSSGenProcedure,
		svc.ConnectSSGen,
		opts...,
	))
	return "/neoshowcase.protobuf.ComponentService/", mux
}

// UnimplementedComponentServiceHandler returns CodeUnimplemented from all methods.
type UnimplementedComponentServiceHandler struct{}

func (UnimplementedComponentServiceHandler) ConnectBuilder(context.Context, *connect_go.BidiStream[pb.BuilderResponse, pb.BuilderRequest]) error {
	return connect_go.NewError(connect_go.CodeUnimplemented, errors.New("neoshowcase.protobuf.ComponentService.ConnectBuilder is not implemented"))
}

func (UnimplementedComponentServiceHandler) ConnectSSGen(context.Context, *connect_go.Request[emptypb.Empty], *connect_go.ServerStream[pb.SSGenRequest]) error {
	return connect_go.NewError(connect_go.CodeUnimplemented, errors.New("neoshowcase.protobuf.ComponentService.ConnectSSGen is not implemented"))
}
